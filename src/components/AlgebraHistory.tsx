import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
import { Button } from "@/components/ui/button";
import { BookOpen, Calendar, Globe, Users, ArrowRight, Clock, Star } from "lucide-react";

interface HistoryPeriod {
  id: string;
  title: string;
  period: string;
  description: string;
  keyFigures: string[];
  contributions: string[];
  icon: string;
  color: string;
}

const historyPeriods: HistoryPeriod[] = [
  {
    id: "ancient",
    title: "ржкрзНрж░рж╛ржЪрзАржи ржпрзБржЧ",
    period: "рзйрзжрзжрзж ржЦрзНрж░рж┐рж╕рзНржЯржкрзВрж░рзНржм - рзмрзжрзж ржЦрзНрж░рж┐рж╕рзНржЯрж╛ржмрзНржж",
    description: "ржмрзАржЬржЧржгрж┐рждрзЗрж░ ржкрзНрж░ржержо рж╕рзВржЪржирж╛ ржкрзНрж░рж╛ржЪрзАржи рж╕ржнрзНржпрждрж╛ржпрж╝ред ржорж┐рж╢рж░ ржУ ржмрзНржпрж╛ржмрж┐рж▓ржирзЗ ржЧрж╛ржгрж┐рждрж┐ржХ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржирзЗрж░ ржкрзНрж░рж╛ржержорж┐ржХ ржкржжрзНржзрждрж┐ред",
    keyFigures: ["ржЖрж╣ржорзЗрж╕", "ржбрж┐ржУржлрж╛ржирзНржЯрж╛рж╕", "ржмрзНрж░рж╣рзНржоржЧрзБржкрзНржд"],
    contributions: [
      "рж░рзИржЦрж┐ржХ рж╕ржорзАржХрж░ржг рж╕ржорж╛ржзрж╛ржи",
      "ржЬрзНржпрж╛ржорж┐рждрж┐ржХ ржкржжрзНржзрждрж┐",
      "ржкрзНрж░рж╛ржержорж┐ржХ ржмрзАржЬржЧрж╛ржгрж┐рждрж┐ржХ ржкрзНрж░рждрзАржХ"
    ],
    icon: "ЁЯПЫя╕П",
    color: "from-amber-500 to-orange-500"
  },
  {
    id: "golden",
    title: "рж╕рзНржмрж░рзНржгржпрзБржЧ",
    period: "рзорзжрзж - рззрзирзжрзж ржЦрзНрж░рж┐рж╕рзНржЯрж╛ржмрзНржж",
    description: "ржЗрж╕рж▓рж╛ржорзА рж╕рзНржмрж░рзНржгржпрзБржЧрзЗ ржмрзАржЬржЧржгрж┐рждрзЗрж░ ржЖржзрзБржирж┐ржХ ржнрж┐рждрзНрждрж┐ рж╕рзНржерж╛ржкрж┐ржд рж╣ржпрж╝ред ржЖрж▓-ржЦрзЛржпрж╝рж╛рж░рж┐ржЬржорж┐рж░ ржЕржмржжрж╛ржи ржЕрж╕рж╛ржорж╛ржирзНржпред",
    keyFigures: ["ржЖрж▓-ржЦрзЛржпрж╝рж╛рж░рж┐ржЬржорж┐", "ржЖрж▓-ржХрж╛рж░рж╛ржЬрж┐", "ржЙржорж░ ржЦрзИржпрж╝рж╛ржо"],
    contributions: [
      "ржмрзАржЬржЧржгрж┐ржд рж╢ржмрзНржжрзЗрж░ ржЙрзОржкрждрзНрждрж┐",
      "ржжрзНржмрж┐ржШрж╛ржд рж╕ржорзАржХрж░ржгрзЗрж░ ржкржжрзНржзрждрж┐ржЧржд рж╕ржорж╛ржзрж╛ржи",
      "ржШржирзАржХ рж╕ржорзАржХрж░ржгрзЗрж░ ржЬрзНржпрж╛ржорж┐рждрж┐ржХ рж╕ржорж╛ржзрж╛ржи"
    ],
    icon: "ЁЯМЯ",
    color: "from-emerald-500 to-teal-500"
  },
  {
    id: "renaissance",
    title: "ржиржмржЬрж╛ржЧрж░ржг",
    period: "рззрзкрзжрзж - рззрзмрзжрзж ржЦрзНрж░рж┐рж╕рзНржЯрж╛ржмрзНржж",
    description: "ржЗржЙрж░рзЛржкрзАржпрж╝ ржиржмржЬрж╛ржЧрж░ржгрзЗ ржкрзНрж░рждрзАржХрзА ржмрзАржЬржЧржгрж┐рждрзЗрж░ ржмрж┐ржХрж╛рж╢ред ржЬржЯрж┐рж▓ рж╕ржорзАржХрж░ржг рж╕ржорж╛ржзрж╛ржирзЗрж░ ржирждрзБржи ржкржжрзНржзрждрж┐ ржЖржмрж┐рж╖рзНржХрж╛рж░ред",
    keyFigures: ["ржнрж┐ржпрж╝рзЗрждрж╛", "ржХрж╛рж░рзНржжрж╛ржирзЛ", "ржлрзЗрж░рж╛рж░рж┐"],
    contributions: [
      "ржкрзНрж░рждрзАржХрзА рж╕рзНржмрж░рж▓рж┐ржкрж┐",
      "рждрзНрж░рж┐ржШрж╛ржд ржУ ржЪрждрзБрж░рзНржШрж╛ржд рж╕ржорзАржХрж░ржгрзЗрж░ рж╕рж╛ржзрж╛рж░ржг рж╕ржорж╛ржзрж╛ржи",
      "ржмрзАржЬржЧрж╛ржгрж┐рждрж┐ржХ ржЬрзНржпрж╛ржорж┐рждрж┐"
    ],
    icon: "ЁЯОи",
    color: "from-purple-500 to-pink-500"
  },
  {
    id: "modern",
    title: "ржЖржзрзБржирж┐ржХ ржпрзБржЧ",
    period: "рззрзмрзжрзж - ржмрж░рзНрждржорж╛ржи",
    description: "ржЖржзрзБржирж┐ржХ ржмрзАржЬржЧржгрж┐рждрзЗрж░ ржЬржирзНржоред ржмрж┐ржорзВрж░рзНржд ржмрзАржЬржЧржгрж┐ржд, ржЧрзНрж░рзБржк рждрждрзНрждрзНржм ржПржмржВ ржХрзНрж╖рзЗрждрзНрж░ рждрждрзНрждрзНржмрзЗрж░ ржмрж┐ржХрж╛рж╢ред",
    keyFigures: ["ржЧрзНржпрж╛рж▓рзЛржпрж╝рж╛", "ржЖржмрзЗрж▓", "ржирзЛржпрж╝рзЗржерж╛рж░"],
    contributions: [
      "ржЧрзНрж░рзБржк рждрждрзНрждрзНржм",
      "ржХрзНрж╖рзЗрждрзНрж░ рждрждрзНрждрзНржм",
      "ржмрж┐ржорзВрж░рзНржд ржмрзАржЬржЧржгрж┐ржд",
      "ржХржорзНржкрж┐ржЙржЯрж╛рж░ ржмрзАржЬржЧржгрж┐ржд"
    ],
    icon: "ЁЯЪА",
    color: "from-blue-500 to-cyan-500"
  }
];

const timelineEvents = [
  { year: "рзйрзжрзжрзж ржЦрзНрж░рж┐.ржкрзВ.", event: "ржкрзНрж░рж╛ржЪрзАржи ржорж┐рж╢рж░рзЗ ржкрзНрж░ржержо рж░рзИржЦрж┐ржХ рж╕ржорзАржХрж░ржг" },
  { year: "рзорзирзж ржЦрзНрж░рж┐.", event: "ржЖрж▓-ржЦрзЛржпрж╝рж╛рж░рж┐ржЬржорж┐рж░ 'ржЖрж▓-ржЬрж╛ржмрж░' ржЧрзНрж░ржирзНрже" },
  { year: "рззрзирзжрзи ржЦрзНрж░рж┐.", event: "ржлрж┐ржмрзЛржирж╛ржЪрж┐рж░ 'рж▓рж┐ржмрж╛рж░ ржЖржмрж╛ржЪрж┐'" },
  { year: "рззрзлрзпрзз ржЦрзНрж░рж┐.", event: "ржнрж┐ржпрж╝рзЗрждрж╛рж░ ржкрзНрж░рждрзАржХрзА ржмрзАржЬржЧржгрж┐ржд" },
  { year: "рззрзорзйрзи ржЦрзНрж░рж┐.", event: "ржЧрзНржпрж╛рж▓рзЛржпрж╝рж╛ рждрждрзНрждрзНржм" },
  { year: "рззрзпрзмрзж ржЦрзНрж░рж┐.", event: "ржХржорзНржкрж┐ржЙржЯрж╛рж░ ржмрзАржЬржЧржгрж┐рждрзЗрж░ рж╢рзБрж░рзБ" }
];

export function AlgebraHistory() {
  const [selectedPeriod, setSelectedPeriod] = useState<string | null>(null);
  const [activeTimeline, setActiveTimeline] = useState(0);

  return (
    <div className="space-y-8">
      {/* Header */}
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center space-y-4"
      >
        <div className="flex items-center justify-center gap-2 mb-4">
          <BookOpen className="h-8 w-8 text-primary" />
          <h1 className="text-4xl font-bold text-primary font-['Hind_Siliguri']">
            ржмрзАржЬржЧржгрж┐рждрзЗрж░ ржЗрждрж┐рж╣рж╛рж╕
          </h1>
        </div>
        <p className="text-lg text-muted-foreground font-['Hind_Siliguri'] max-w-2xl mx-auto">
          ржкрзНрж░рж╛ржЪрзАржи ржХрж╛рж▓ ржерзЗржХрзЗ ржЖржзрзБржирж┐ржХ ржпрзБржЧ ржкрж░рзНржпржирзНржд ржмрзАржЬржЧржгрж┐рждрзЗрж░ ржмрж┐ржХрж╛рж╢рзЗрж░ рж░рзЛржорж╛ржЮрзНржЪржХрж░ ржпрж╛рждрзНрж░рж╛
        </p>
      </motion.div>

      {/* Interactive Timeline */}
      <motion.section
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2 }}
        className="bg-gradient-card rounded-xl p-6 border border-primary/20"
      >
        <h2 className="text-2xl font-semibold text-primary font-['Hind_Siliguri'] mb-6 flex items-center gap-2">
          <Clock className="h-6 w-6" />
          ржХрж╛рж▓ржкржЮрзНржЬрзА
        </h2>
        
        <div className="relative">
          <div className="absolute left-4 top-0 bottom-0 w-0.5 bg-primary/30"></div>
          <div className="space-y-6">
            {timelineEvents.map((event, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: 0.1 * index }}
                className={`relative flex items-center gap-4 cursor-pointer transition-all duration-300 ${
                  activeTimeline === index ? 'scale-105' : 'hover:scale-102'
                }`}
                onClick={() => setActiveTimeline(index)}
              >
                <div className={`relative z-10 w-8 h-8 rounded-full border-4 transition-all duration-300 ${
                  activeTimeline === index 
                    ? 'bg-primary border-primary shadow-glow' 
                    : 'bg-background border-primary/30 hover:border-primary/60'
                }`}>
                  {activeTimeline === index && (
                    <motion.div
                      layoutId="timeline-indicator"
                      className="absolute inset-0 rounded-full bg-primary/20"
                      animate={{ scale: [1, 1.5, 1] }}
                      transition={{ duration: 1.5, repeat: Infinity }}
                    />
                  )}
                </div>
                <div className={`flex-1 p-4 rounded-lg transition-all duration-300 ${
                  activeTimeline === index 
                    ? 'bg-primary/10 border border-primary/30' 
                    : 'bg-background/50 hover:bg-primary/5'
                }`}>
                  <div className="font-semibold text-primary font-['Hind_Siliguri']">
                    {event.year}
                  </div>
                  <div className="text-muted-foreground font-['Hind_Siliguri']">
                    {event.event}
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </motion.section>

      {/* Historical Periods Grid */}
      <motion.section
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.4 }}
      >
        <h2 className="text-2xl font-semibold text-primary font-['Hind_Siliguri'] mb-6 flex items-center gap-2">
          <Globe className="h-6 w-6" />
          ржРрждрж┐рж╣рж╛рж╕рж┐ржХ ржпрзБржЧрж╕ржорзВрж╣
        </h2>
        
        <div className="grid md:grid-cols-2 gap-6">
          {historyPeriods.map((period, index) => (
            <motion.div
              key={period.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.1 * index }}
              whileHover={{ scale: 1.02 }}
              className="group cursor-pointer"
              onClick={() => setSelectedPeriod(period.id === selectedPeriod ? null : period.id)}
            >
              <Card className="h-full border-primary/20 hover:border-primary/40 transition-all duration-300 overflow-hidden">
                <CardHeader className={`bg-gradient-to-r ${period.color} text-white relative`}>
                  <div className="absolute top-2 right-2 text-2xl">
                    {period.icon}
                  </div>
                  <CardTitle className="font-['Hind_Siliguri'] text-xl">
                    {period.title}
                  </CardTitle>
                  <Badge variant="secondary" className="w-fit font-['Hind_Siliguri']">
                    {period.period}
                  </Badge>
                </CardHeader>
                
                <CardContent className="p-6 space-y-4">
                  <p className="text-muted-foreground font-['Hind_Siliguri'] leading-relaxed">
                    {period.description}
                  </p>
                  
                  <AnimatePresence>
                    {selectedPeriod === period.id && (
                      <motion.div
                        initial={{ opacity: 0, height: 0 }}
                        animate={{ opacity: 1, height: "auto" }}
                        exit={{ opacity: 0, height: 0 }}
                        className="space-y-4"
                      >
                        <Separator />
                        
                        <div>
                          <h4 className="font-semibold text-primary font-['Hind_Siliguri'] mb-2 flex items-center gap-2">
                            <Users className="h-4 w-4" />
                            ржорзБржЦрзНржп ржмрзНржпржХрзНрждрж┐рждрзНржм
                          </h4>
                          <div className="flex flex-wrap gap-2">
                            {period.keyFigures.map((figure, idx) => (
                              <Badge key={idx} variant="outline" className="font-['Hind_Siliguri']">
                                {figure}
                              </Badge>
                            ))}
                          </div>
                        </div>
                        
                        <div>
                          <h4 className="font-semibold text-primary font-['Hind_Siliguri'] mb-2 flex items-center gap-2">
                            <Star className="h-4 w-4" />
                            ржкрзНрж░ржзрж╛ржи ржЕржмржжрж╛ржи
                          </h4>
                          <ul className="space-y-1">
                            {period.contributions.map((contribution, idx) => (
                              <li key={idx} className="text-sm text-muted-foreground font-['Hind_Siliguri'] flex items-center gap-2">
                                <ArrowRight className="h-3 w-3 text-primary" />
                                {contribution}
                              </li>
                            ))}
                          </ul>
                        </div>
                      </motion.div>
                    )}
                  </AnimatePresence>
                  
                  <Button
                    variant="ghost"
                    size="sm"
                    className="w-full font-['Hind_Siliguri']"
                  >
                    {selectedPeriod === period.id ? 'ржХржо ржжрзЗржЦрзБржи' : 'ржЖрж░ржУ ржжрзЗржЦрзБржи'}
                    <ArrowRight className={`h-4 w-4 ml-2 transition-transform ${
                      selectedPeriod === period.id ? 'rotate-90' : 'group-hover:translate-x-1'
                    }`} />
                  </Button>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>
      </motion.section>

      {/* Fun Facts */}
      <motion.section
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.6 }}
        className="bg-gradient-to-r from-primary/10 to-accent/10 rounded-xl p-6 border border-primary/20"
      >
        <h2 className="text-2xl font-semibold text-primary font-['Hind_Siliguri'] mb-6 text-center">
          ЁЯдФ ржЖржХрж░рзНрж╖ржгрзАржпрж╝ рждржерзНржп
        </h2>
        
        <div className="grid md:grid-cols-3 gap-6">
          <motion.div
            whileHover={{ scale: 1.05 }}
            className="text-center p-4 bg-background/50 rounded-lg"
          >
            <div className="text-3xl mb-2">ЁЯУЭ</div>
            <h3 className="font-semibold text-primary font-['Hind_Siliguri'] mb-2">
              'ржмрзАржЬржЧржгрж┐ржд' рж╢ржмрзНржжрзЗрж░ ржЙрзОржкрждрзНрждрж┐
            </h3>
            <p className="text-sm text-muted-foreground font-['Hind_Siliguri']">
              ржЖрж░ржмрж┐ 'ржЖрж▓-ржЬрж╛ржмрж░' ржерзЗржХрзЗ ржПрж╕рзЗржЫрзЗ, ржпрж╛рж░ ржЕрж░рзНрже 'ржкрзБржирж░рж╛ржпрж╝ рж╕ржВржпрзЛржЬржи'
            </p>
          </motion.div>
          
          <motion.div
            whileHover={{ scale: 1.05 }}
            className="text-center p-4 bg-background/50 rounded-lg"
          >
            <div className="text-3xl mb-2">ЁЯзо</div>
            <h3 className="font-semibold text-primary font-['Hind_Siliguri'] mb-2">
              ржкрзНрж░ржержо ржмрзАржЬржЧрж╛ржгрж┐рждрж┐ржХ ржкрзНрж░рждрзАржХ
            </h3>
            <p className="text-sm text-muted-foreground font-['Hind_Siliguri']">
              + ржПржмржВ - ржЪрж┐рж╣рзНржи ржкрзНрж░ржержо ржмрзНржпржмрж╣рзГржд рж╣ржпрж╝ рззрзкрзорзп рж╕рж╛рж▓рзЗ
            </p>
          </motion.div>
          
          <motion.div
            whileHover={{ scale: 1.05 }}
            className="text-center p-4 bg-background/50 rounded-lg"
          >
            <div className="text-3xl mb-2">ЁЯСйтАНЁЯФм</div>
            <h3 className="font-semibold text-primary font-['Hind_Siliguri'] mb-2">
              ржкрзНрж░ржержо ржорж╣рж┐рж▓рж╛ ржЧржгрж┐рждржмрж┐ржж
            </h3>
            <p className="text-sm text-muted-foreground font-['Hind_Siliguri']">
              ржПржорж┐ ржирзЛржпрж╝рзЗржерж╛рж░ ржЖржзрзБржирж┐ржХ ржмрзАржЬржЧржгрж┐рждрзЗрж░ ржЬржиржирзА рж╣рж┐рж╕рзЗржмрзЗ ржкрж░рж┐ржЪрж┐ржд
            </p>
          </motion.div>
        </div>
      </motion.section>
    </div>
  );
}